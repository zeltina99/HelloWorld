#define _CRT_SECURE_NO_WARNINGS
#include <iostream> // 입출력 관련(cout)
#include <stdio.h>
#include <cstdio>
#include "header.h"

/*
데이터 타입
int : 정수형. 일반적으로 32bit. 범위는 (대략 -21억~+21억)
float : 실수형. 32bit. 태생적으로 오차가 있는 타입. 대략 총7자리부터 오차 발생
double : 실수형. 64bit.
bool : 불리언. true/false만 저장.
char : 캐릭터. 글자하나를 저장하는 데이터 타입. 8bit 정수형
	char alpha = 'a';	// 글자 하나만 저장
	char alpha2 = 64;
std::string : 스트링. 문자열을 쉽게 다룰 수 있는 자료형.
	문자열 : 글자 여러개가 연결된것
	std::string str = "Hello World!";
	char* str;
	char str[32];
*/

/*
상수(Constant)
 - 변하지 않는 수
 - 코드의 안정성과 가독성을 높여준다.
	(매직넘버 회피에 좋다)
	(매크로로와는 달리 타입체크가 가능하다)
*/

/*
비교연산자
 - 비교를 하는 연산자. 참이냐 거짓이냐가 결과로 나온다.
 - >, <, >=, <=, ==, !=

 int a = 10;
 int b = 20;
 bool result = a > b;		// 결과는 거짓이니까 result = false;

 int a = 100;
 int b = 20;
 bool result = a > b;		// 결과는 참이니까 result = true;

 int a = 50;
 int b = 50;
 bool result = a == b;	// 결과는 참이니까 result = true;

 // ‘실수형 자료형은 비교 연산자를 사용하면 안 된다’ 가 맞을까요?
 // 정확하게 이야기하면
	"값이 같은지를 비교하는 ==, <=, >=를 조심해서 사용해야 한다." 입니다.
*/

/*
제어문
 - 프로그램의 흐름을 제어하는 문(Statement)
  - 조건문 : 조건에 따라 프로그램의 흐름을 변경하는 문
	- if, else if, else
	- switch
	- 삼항연산자
  - 반복문 : 일정 조건에 따라 코드를 반복하는 문
*/

/*
논리 연산자
 - bool값을 받아 bool로 된 결과를 낸다.
&&	(And)	&&의 양쪽이 둘 다 true면 true. 그 외는 false
||	(Or)	||의 양쪽에 하나라도 true가 있으면 true, 아니면 false
!	(Not)	! 뒤의 bool이 true면 false, false면 true.
*/

/*
	비트 연산자
	&	(And)	두 비트가 모두 1이면 1, 아니면 0
		특정 비트가 세팅이 되어 있는지 확인하는데 사용(플래그 검사)
		int a = 10;		// 0b1010
		int b = 9;		// 0b1001
		int c = a & b;	// 0b1000	0b(이진수라는 뜻)

	|	(Or)	두 비트가 하나라도 1이면 1, 둘 다 0이면 0
		특정 비트에 플래그를 세팅하고 싶을 때 사용(플래그 설정)
		int a = 10;		// 0b1010
		int b = 9;		// 0b1001
		int c = a | b;	// 0b1011

	^	(XOR)	두 비트가 서로 다르면 1, 같으면 0
		특정 비트를 토글하고 싶을 때 사용
		int a = 10;		// 0b1010
		int b = 9;		// 0b1001
		int c = a ^ b;	// 0b0011

	~	(Not)	비트값을 반전 시킨다(0 -> 1, 1 -> 0)
		int a = 10;		// 0b1010
		a = ~a;			// 0b0101

	<<	(Left Shift)	비트들을 왼쪽으로 이동
		한번 움직일 때 마다 수가 두배가 된다.
		int a = 7;		// 0b0111
		a = a << 1;		// 0b1110

	>>	(Right Shift)	비트들을 오른쪽으로 이동
		한번 움직일 때 마다 수가 절반이 된다. (양수 일 때)
		int a =	7;		// 0b0111
		a = a >> 1;		// 0b0011
*/

/*
	반복문
	- 제어문 중의 하나
	- 특정 코드 블록을 조건에 따라 여러번 반복해서 실행할 수 있게 해주는 문
	for			반복 회수가 명확할 때 좋음
	while		반복 회수가 명확하지 않고 조건에 따라 반복할 때 사용
	do-while	최소 한번은 무조건 실행해야 할 때 사용.(while과 거의 같음)
*/

#include <iostream>	// 입출력 관련(cout)
#include <stdio.h>
#include <cstdio>	// stdio.h에 네임스페이스 추가한 래퍼
#include "header.h"

//using namespace std;

int main() // 엔트리 포인트(코드가 시작되는 곳)
{
	//printf("Hello\tWorld!\n");		// C언어의 출력 방법
	//printf("\"고병조\"\t");			// ""안에 \n이 있으면 줄을 바꾸라는 의미(
	//printf("82년생입니다.┌─┐▣□\n");

	//// 이스케이프 시퀀스
	//// \n : 줄바꾸기(개행문자)
	//// \t : 탭 넣기
	//// \" : 쌍따옴표 한개
	//// \\ : \찍기
	//// \r : 캐리지 리턴(윈도우에서는 중요하지 않음. 리눅스에서는 중요함)
	//	
	////std::cout << "Hello World!\n";	// C++ 출력 방법

	//// number라는 이름을 가진 int(인티저)변수를 선언하고 거기에 0을 대입한다.
	//int number;	// 변수 선언.
	//number = 0;	// 변수에 값을 대입.

	//// int : 정수형(소수점이 없는 숫자, 5, 10, -2, 0, 66 ...)
	//number = 5.3; // number에는 5가 저장된다.
	//number = 5 / 2;	// number에는 2가 저장된다.

	////

	//scanf("%d", &number);	// 숫자를 하나 입력 받기(C)
	//printf("입력한 숫자는(C) : %d\n", number);

	//std::cin >> number;		// 숫자를 하나 입력 받기(C++)
	//printf("입력한 숫자는(C++) : %d\n", number);

	// 프로그램을 실행했을 때 나이를 물어보고 입력받은 숫자를 그대로 출력해보기

	// 추가추가추가추가추가추가추가추가추가

	// 추가추가추가추가추가추가추가추가추가2

	// 실습실습
	//  실습실습

	//int number1 = 0;
	//int number2 = 0;
	//printf("숫자 1을 입력하시오 : ");
	//std::cin >> number1;
	//printf("숫자 2를 입력하시오 : ");
	//std::cin >> number2;
	//int number3 = number1 + number2;
	//printf("두 숫자의 합은 %d입니다.", number3);

	//float number1 = 10.0f;	// 10이라는 float 타입의 값을 float인 numnber1에 넣기
	//float number2 = 15.0;	// 15라는 double 타입의 값을 float인 number2에 넣기

	//std::cin >> number1 >> number2;
	//printf("number1 : %f\nnumber2 : %.2f", number1, number2);

	//// 간단실습 : 원의 반지름을 입력 받고 넓이 구하기
	//const float Pi = 3.141592f;	// 상수를 선언하고 정의
	//float radius = 0.0f;
	//printf("원의 반지름을 입력하세요 : ");
	//std::cin >> radius;
	//printf("원의 넓이는 [%f]입니다.\n", radius * radius * Pi);


	//int square = 0;
	//printf("정사각형의 한변의 길이를 입력하세요 : ");
	//std::cin >> square;
	//printf("정사각형의 넓이는 [%d]입니다.", square * square);
	//// 오버플로우 발생할 수 있음

	//float a = 123.0f;
	//float b = 0.0f;
	//std::cin >> b;
	//b = b * 123.0f;

	//bool result = a == b;	// F9 : 브레이크 포인트 설정/해제

	//float 타입을 ==로 비교할 때 반드시 아래와 같이 진행해야함.
	//float epsilon = 0.001f;
	//a < (b + epsilon);
	//a > (b - epsilon);

	// if : 소괄호 안이 true면 중괄호 안의 코드를 실행하라.
	//		내가 특정 조건을 만족할 때만 어떤 코드를 실행하고 싶을 때 사용.

	//int a = 10;
	//int b = 0;
	//printf("a는 10\nb를 입력하세요 : ");
	//std::cin >> b;

	//if (a > b)
	//{
	//	printf("if가 성공했다.\n");
	//	printf("b가 %d라서 a가 더 크다\n", b);
	//}

	//if (a <= b)
	//{
	//	printf("b가 %d라서 a가 더 작거나같다\n", b);
	//}

	//// if-else : 이거 아니면 저거일때 사용.
	//if (a > b)
	//{
	//	printf("a가 b보다 크다.\n");
	//}
	//else
	//{
	//	printf("a가 b보다 작거나 같다.\n");
	//}

	//if (b < 60)
	//{
	//	//F
	//}
	//else if (b < 70)
	//{
	//	//D
	//}
	//else if(b < 80)
	//{
	//	//C
	//}
	//else if (b < 90)
	//{
	//	//B
	//}
	//else
	//{
	//	//A
	//}

	//int a = 0;
	//std::cin >> a;
	//switch (a)
	//{
	//case 1:
	//	printf("1이다.\n");
	//	break;
	//case 3:
	//	printf("3이다.\n");
	//	break;
	//case 5:
	//	printf("5이다.\n");
	//	break;
	//default:
	//	printf("1,3,5가 아니다.\n");
	//	break;
	//}

	//int a = 10;
	//int b = 20;
	//int c = 0;
	//if (a > b)
	//{
	//	c = a * 2 + b;
	//}
	//else
	//{
	//	c = a + b * 2;
	//}
	//c = (a > b) ? (a * 2 + b) : (a + b * 2); // 삼항연산자

	////1. 숫자를 입력받아 양수인지 음수인지 0인지 출력하기
	//int InputNumber = 0;	//변수 선언은 사용하기 직전에 선언하는게 좋다.
	//printf("숫자를 입력하세요 : ");
	//std::cin >> InputNumber;
	//if (InputNumber > 0)	//if는 범위가 큰것이 먼저 체크되게 하기
	//{
	//	printf("입력한 숫자는 양수입니다.\n");
	//}
	//else if (InputNumber < 0)
	//{
	//	printf("입력한 숫자는 음수입니다.\n");
	//}
	//else
	//{
	//	printf("입력한 숫자는 0입니다.\n");
	//}

	////2. 숫자를 입력받아 홀수인지 짝수인지 출력하기
	//printf("홀짝을 판별하기 위한 숫자를 입력하세요 : ");
	//std::cin >> InputNumber;
	//if (InputNumber % 2 == 0)
	//{
	//	printf("짝수를 입력했습니다.\n");
	//}
	//else
	//{
	//	printf("홀수를 입력했습니다.\n");
	//}

	////3. 두 수를 입력 받아 더 큰 수를 출력하기. 같을 경우는 같다고 출력.
	//int Number1 = 0;
	//int Number2 = 0;
	//printf("더 큰 수를 확인하기 위해 숫자 두개를 입력하세요 : ");
	//std::cin >> Number1 >> Number2;
	//if (Number1 > Number2)
	//{
	//	printf("첫번째 숫자가 더 큽니다.\n");
	//}
	//else if (Number2 > Number1)
	//{
	//	printf("두번째 숫자가 더 큽니다.\n");
	//}
	//else
	//{
	//	printf("두 수는 같은 수입니다.\n");
	//}

	////4. 나이와 키를 입력 받아, 6세 이상, 120cm 이상일 때 
	////		롤러코스터 탑승 가능, 그 외에는 불가능으로 출력
	//const unsigned int LimitAge = 5;
	//const float LimitHeight = 120.0f;
	//unsigned int Age = 0;
	//float Height = 0;	// 암시적 변환(대충 변환해주는거, 보통 표현범위가 큰쪽으로 변경됨)
	//printf("나이를 입력하세요 : ");
	//std::cin >> Age;
	//printf("키를 입력하세요 : ");
	//std::cin >> Height;
	//if (Age > LimitAge && Height > LimitHeight)	//float일때는 =없이 해도 되긴 함
	//{
	//	printf("롤러코스터 탑승가능!\n");
	//}
	//else
	//{
	//	printf("롤러코스터 탑승 불가능!\n");
	//}

	////5. 점수를 입력 받아 90점 이상은 A, 80점 이상은 B, 70점 이상은 C, 
	////		60점 이상은 D, 그 이하는 F라고 출력하기


	////6. 세 과목의 점수를 입력받아, 세 과목 평균이 60점 이상이면 
	////		"합격", 아니면 "불합격"을 출력
	////		단, 한과목이라도 40점 미만이면 불합격 출력하기
	//int Point1 = 0;
	//int Point2 = 0;
	//int Point3 = 0;
	//printf("시험 점수를 3개 입력해 주세요 : ");
	//std::cin >> Point1 >> Point2 >> Point3;
	//const int AverageLimit = 60;
	//const int FailLimit = 40;
	//float Average = (Point1 + Point2 + Point3) / 3.0f;

	//if ((Average >= AverageLimit) && 
	//	(Point1 >= FailLimit && Point2 >= FailLimit && Point3 >= FailLimit))	// int 나누기 float는 float
	//{
	//	printf("합격\n");
	//}
	//else
	//{
	//	printf("불합격\n");
	//}


	//int Flag = 0b1010;	
	//// 0b0001 = 왼쪽 키가 눌려졌다.
	//// 0b0010 = 오른쪽 키가 눌려졌다.
	//// 0b0100 = 위쪽 키가 눌려졌다.
	//// 0b1000 = 아래쪽 키가 눌려졌다.

	//if ((Flag & 0b0010) != 0b0000)
	//{
	//	// 오른쪽 키가 눌려져 있다.
	//}
	//else
	//{
	//	// 오른쪽 키가 눌려져 있지 않다.
	//}
	//// int Flag = 0b1010;	
	//Flag = Flag | 0b0001;	// 결과는 Flag = 0b1011

	//// int Flag =		0b1010;
	//int Result = Flag ^ 0b0001;	// 결과 = 0b1011;
	//Result = 0b1011 ^ 0b0001;	// 결과 = 0b1010;

	//Flag = 0b1010;
	//int Test = 0b0001;
	//Test = ~Test;	// 왼쪽 키를 제외한 나머지 모두 세팅

	//// enum : 상수들에게 사람이 알아보기 좋은 이름을 붙여 놓은 것
	//enum Key	//c 스타일
	//{
	//	Up		= 1 << 0,	// 0b0001
	//	Down	= 1 << 1,	// 0b0010
	//	Left	= 1 << 2,	// 0b0100
	//	Right	= 1 << 3	// 0b1000
	//};

	//// Flag가 Up이랑 같아서 0이 아닐경우 : Up이 눌릴경우
	//if ((Flag & Up) != 0)
	//{
	//	// Up버튼이 눌려져있다.
	//}

	// 간단 실습 : 양수를 하나 입력받고 홀수인지 짝수인지 출력하기(%사용금지)
	/*int InputNumber = 0;
	printf("테스트할 수를 입력하세요 : ");
	std::cin >> InputNumber;
	if ((InputNumber & 1) != 0)
	{
		printf("홀수를 입력했습니다.\n");
	}
	else
	{
		printf("짝수를 입력했습니다.\n");
	}*/

	//헬로 월드 10번찍기(for)
	//for (int i = 0; i < 10; i++)
	//{
	//	printf("Hello World For: %d\n", i);
	//}

	//int Count = 1;
	//while ((Count % 3) != 0)	//while()의 조건이 참이면 코드 블럭 실행
	//{
	//	printf("Hello World While: %d\n", Count);
	//	Count++;
	//}

	//Count = 1;
	//do
	//{
	//	printf("Hello World While: %d\n", Count);
	//	Count++;
	//} while ((Count % 3) != 0);	//while()의 조건이 참이면 코드 블럭 실행

	// 간단 실습
	// 1. 0을 입력받을 때까지 입력을 계속 받고 0이 입력되면 입력받은 숫자의 합을 출력하기.
	//		while이랑 do-while 모두 해보기
	
	int Count = -1;
	int Sum = 0;
	while (Count != 0)
	{
		std::cin >> Count;
		Sum += Count;
	}
	printf("총합은 : %d\n\n", Sum);

	int Count_a = -1;
	int Sum_a = 0;
	do
	{
		std::cin >> Count_a;
		Sum_a += Count_a;
		
	} while (Count_a != 0);
	printf("총 합은: %d\n\n", Sum_a);

	// 2. 입력받은 숫자의 구구단 출력해보기
	int Number1 = 0;
	printf("수를 입력해주세요.: ");
	std::cin >> Number1;
	for (int i = 1; i < 10; i++)
	{
		printf("%d*%d=%d\n", Number1, i, Number1 * i);
	}
	printf("\n");
	// 3. 숫자를 하나 입력 받고 입력받은 수까지 있는 숫자 중 홀수만 출력하기
	int Number2 = 0;
	printf("수를 입력해주세요.: ");
	std::cin >> Number2;
	if (Number2 % 2 != 0)
	{
		while (Number2 > 0)
		{
			printf("%d\n", Number2);
			Number2-=2;
		}
	}
	else
	{
		while (Number2 > 0)
		{
			printf("%d\n", Number2);
			Number2 -= 2;
		}
	}
	printf("\n");
	// 4. 1~100사이의 숫자 중에 7의 배수만 출력하기
	const int LowLimit = 2;
	const int HighLimit = 100;
	const int MagicNum = 7;
	int Sum_b = 7;
	for (int j = LowLimit; Sum_b <= HighLimit; j++)
	{
		printf("%d\n", Sum_b);
		Sum_b = j * MagicNum;
	}
	printf("\n");
	
	// 5. 입력받은 숫자만큼의 층을 가진 피라미드 그리기
	//		3을 입력받았으면 아래와 같이 출력하기
	//			*
	//         ***
	//		  *****

	int Star = 0;
	printf("수를 입력해주세요.: ");
	std::cin >> Star;
	for (int x = 0; x < Star; x++)
	{
		for (int y = Star - 1; y > x ; y--) 
		{
			printf(" ");
		}
		for (int y = 0; y < 2 * x + 1; y++) 
		{
			printf("*");
		}
		printf("\n");
	}
	

	return 0;

}